// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tpi.DBContexts;

#nullable disable

namespace tpi.Migrations
{
    [DbContext(typeof(AppTPIContext))]
    [Migration("20220611173831_name-change")]
    partial class namechange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("tpi.Entities.GeographicBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GeographicBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            Name = "B",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            Name = "C",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("tpi.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TipoPersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "superadmin@email.com",
                            Name = "Esteban Quito",
                            Password = "superadmin",
                            PersonTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "admin@email.com",
                            Name = "Igor Dito",
                            Password = "admin",
                            PersonTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "user@email.com",
                            Name = "Armando Escandalo",
                            Password = "user",
                            PersonTypeId = 3
                        });
                });

            modelBuilder.Entity("tpi.Entities.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PersonTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Super Admin"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Usuario"
                        });
                });

            modelBuilder.Entity("tpi.Entities.Person", b =>
                {
                    b.HasOne("tpi.Entities.PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId");

                    b.Navigation("PersonType");
                });
#pragma warning restore 612, 618
        }
    }
}
